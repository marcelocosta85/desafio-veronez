// <auto-generated />
using System;
using Desafio.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Desafio.Data.Migrations
{
    [DbContext(typeof(DesafioDbContext))]
    [Migration("20200305183013_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Desafio.Business.Models.Autor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CPF")
                        .HasColumnType("varchar(11)");

                    b.Property<DateTime>("DataNascimento");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("PaisOrigem")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Sexo")
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Autores");
                });

            modelBuilder.Entity("Desafio.Business.Models.Obra", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("AutorId");

                    b.Property<DateTime>("DataExposicao");

                    b.Property<DateTime>("DataPublicacao");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("AutorId");

                    b.ToTable("Obras");
                });

            modelBuilder.Entity("Desafio.Business.Models.Obra", b =>
                {
                    b.HasOne("Desafio.Business.Models.Autor", "Autor")
                        .WithMany("Obras")
                        .HasForeignKey("AutorId");
                });
#pragma warning restore 612, 618
        }
    }
}
